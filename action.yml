name: "Cadquery Action"
description: "Builds and optionally renders cadquery models. It may also build a static website for GitHub Pages."
inputs:
  scripts:
    description: "The |-separated scripts containing the model(s) to build."
    required: true
    default: "main.py"
  formats:
    description: "The |-separated formats in which to build all model(s)."
    required: false
    default: "STL|STEP|AMF|SVG|TJS|DXF|VRML|VTP|3MF"
  website:
    description: "Relative path where a static website to visualize the models using GitHub Pages will be built. Disabled if empty."
    required: false
    default: "."
  website-screenshot:
    description: "Whether to render the model(s). The public link to the resulting PNG will be an output."
    required: false
    default: "true"
outputs:
  models:
    description: "The |-separated paths to the directory containing built model(s) from each script."
    value: "${{ steps.build.outputs.models }}"
  website-screenshot-link:
    description: "The public link to the rendered model(s) as a PNG."
    value: "${{ steps.website.outputs.website-screenshot-link }}"
runs:
  using: "composite"
  steps:
    - name: "Install cadquery"
      shell: "bash"
      run: "pip install -r requirements.txt"

    - name: "Build model(s)"
      id: "build"
      shell: "bash"
      run: |
        set -ex
        
        base_folder=$(mktemp -d)
        all_model_folders=""
        
        # For each script...
        for script in $(echo "${{ inputs.scripts }}" | tr "|" "\n"); do
        
          # Inject our import to define the show() function
          sed -i '1s/^/from cadquery_action_api import *\n/' $script
        
          # Define environment variables for the script
          export CQ_ACTION_OUT_DIR="$base_folder/$(basename "$script" .py)"
          export CQ_ACTION_SCRIPT_NAME="$script"
          export CQ_ACTION_WANTED_FORMATS="${{ inputs.formats }}"
        
          # Build the model(s)
          python $script
        
          # Save the folder
          all_model_folders="$all_model_folders|$CQ_ACTION_OUT_DIR"
        done
        
        # Remove the first | from the list
        all_model_folders=$(echo "$all_model_folders" | cut -c2-)
        
        # Set the output, using an environment file
        echo "models=$all_model_folders" >> "$GITHUB_OUTPUT"

    - name: "Upload artifacts"
      uses: "actions/upload-artifact@v3"
      with:
        name: "Built models"
        path: "${{ steps.build.outputs.models }}"

    - name: "Build website"
      if: "${{ inputs.website == 'true' }}"
      shell: "bash"
      run: |
        # TODO: Build website

    - name: "Render website"
      if: "${{ inputs.website-screenshot == 'true' }}"
      shell: "bash"
      run: |
        # TODO: Render website